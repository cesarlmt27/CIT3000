name: sw

services:
  database:
    container_name: postgresql
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: postgres # Usuario por defecto de la imagen postgres
      POSTGRES_DB: postgres   # Base de datos por defecto de la imagen postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Carga la contraseña desde un archivo .env
      TZ: America/Santiago # Zona horaria para el sistema
    networks:
      - soa-net
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Inicializa la base de datos con un script SQL

  bus:
    container_name: soabus
    image: jrgiadach/soabus:v1
    restart: always
    networks:
      - soa-net

  backup-service:
    build:
      context: .
      dockerfile: ./backup-service/Dockerfile
    container_name: backup-service
    restart: always
    environment:
      DB_HOST: database
      DB_USER: postgres
      DB_NAME: postgres
      DB_PASS: ${POSTGRES_PASSWORD}
      BUS_HOST: bus
      SERVICE_NAME: bkpsv # Nombre de 5 letras para el servicio
    networks:
      - soa-net
    depends_on:
      - database
      - bus
      - cloud-service
    volumes:
      - backup_data:/data

  admin-service:
    build:
      context: .
      dockerfile: ./admin-service/Dockerfile
    container_name: admin-service
    restart: always
    environment:
      DB_HOST: database
      DB_USER: postgres
      DB_NAME: postgres
      DB_PASS: ${POSTGRES_PASSWORD}
      BUS_HOST: bus
      SERVICE_NAME: admsv # Nombre único de 5 letras
    networks:
      - soa-net
    depends_on:
      - database
      - bus

  cloud-service:
    build:
      context: .
      dockerfile: ./cloud-service/Dockerfile
    container_name: cloud-service
    restart: always
    environment:
      BUS_HOST: bus
      SERVICE_NAME: clcsv # Nombre único de 5 letras
      RCLONE_API_USER: ${RCLONE_API_USER}
      RCLONE_API_PASS: ${RCLONE_API_PASS}
    networks:
      - soa-net
    depends_on:
      - bus
    volumes:
      - ./rclone_config:/config/rclone
      - ./rclone_data:/data

  restore-service:
    build:
      context: .
      dockerfile: ./restore-service/Dockerfile
    container_name: restore-service
    restart: always
    environment:
      DB_HOST: database
      DB_USER: postgres
      DB_NAME: postgres
      DB_PASS: ${POSTGRES_PASSWORD}
      BUS_HOST: bus
      SERVICE_NAME: rstrv # Nombre único de 5 letras
    networks:
      - soa-net
    depends_on:
      - database
      - bus
      - cloud-service

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: client
    environment:
      BUS_HOST: bus
    stdin_open: true
    tty: true
    networks:
      - soa-net
    depends_on:
      - bus

networks:
  soa-net:
    driver: bridge

volumes:
  postgres-data:
  backup_data: